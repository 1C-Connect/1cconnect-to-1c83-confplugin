
&НаКлиенте
Перем ПолеТекстСообщенияЗаполнено;

&НаКлиенте
Процедура ПользовательКоннектПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Элемент.ВыделенныйТекст) Тогда
		ПользовательКоннект = "";
	КонецЕсли;
	УстановитьДоступностьКнопкиОтправить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательКоннектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	МассивПользователи1СКоннект = Пользователи1СКоннект();

	СписокВыбораПользователей = Новый СписокЗначений;

	Для Каждого СтрокаМ Из МассивПользователи1СКоннект Цикл

		СписокВыбораПользователей.Добавить(СтрокаМ.СотрудникКомпании);

	КонецЦикла;

	ДанныеВыбора = СписокВыбораПользователей;

КонецПроцедуры

&НаКлиенте
Процедура ПользовательКоннектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			ПользовательКоннект = ПолучитьУИДПользователя1СКоннект(ВыбранноеЗначение);
		Иначе
			ПользовательКоннект = "";
		КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЛинияПоддержкиПользователяКоннектПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Элемент.ТекстРедактирования) Тогда
		ЛинияПоддержкиПользователяКоннект = "";
	КонецЕсли;
	УстановитьДоступностьКнопкиОтправить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛинияПоддержкиПользователяКоннектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если НЕ ЗначениеЗаполнено(ПользовательКоннект) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите пользователя 1С-Коннект");
		Возврат;
	КонецЕсли;

	СписокЛинийПоддержки = Новый СписокЗначений;
	ПодключенныеЛинииПоддержки = ЛинииПоддержкиСотрудникаСервер(ПользовательКоннект);
	Для Каждого ЭлементМассива Из ПодключенныеЛинииПоддержки Цикл

		НайденнаяСтрока = ТЗЛинийПоддержки1СКоннект.НайтиСтроки(Новый Структура("ИДЛинииПоддержки", ЭлементМассива));
		Если ЗначениеЗаполнено(НайденнаяСтрока) Тогда
			СписокЛинийПоддержки.Добавить(НайденнаяСтрока[0].ОтображаемоеНазвание);
		КонецЕсли;

	КонецЦикла;

	ДанныеВыбора = СписокЛинийПоддержки;

КонецПроцедуры

&НаКлиенте
Процедура ЛинияПоддержкиПользователяКоннектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ВходныеПараметры = Новый Структура;

	Если ЗначениеЗаполнено(ВыбранноеЗначение) И ТЗЛинийПоддержки1СКоннект.Количество() > 0 Тогда

		Для каждого СтрокаТЗ Из ТЗЛинийПоддержки1СКоннект Цикл

			Если СтрокаТЗ.ОтображаемоеНазвание = ВыбранноеЗначение Тогда
				ЛинияПоддержкиПользователяКоннект = СтрокаТЗ.ИДЛинииПоддержки;
				Прервать;
			КонецЕсли;

		КонецЦикла;
		
	Иначе
		
		ЛинияПоддержкиПользователяКоннект = "";

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	УстановитьДоступностьКнопкиОтправить(Ложь, Ложь);
	ПутьКФайлу = Неопределено;
	Элементы.ПутьКФайлу.ПодсказкаВвода = "Ждите завершения обработки файла...";
	ЭтаФорма.ОбновитьОтображениеДанных(Элементы.ПутьКФайлу);
	ОбработкаОкончанияПомещенияФайла = Новый ОписаниеОповещения("ОбработчикОкончанияПомещенияФайла", ЭтотОбъект);
	НачатьПомещениеФайла(ОбработкаОкончанияПомещенияФайла, , , , ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция Пользователи1СКоннект()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	Коннект_СвязиСПользователями.СотрудникКомпании КАК СотрудникКомпании,
		|	Коннект_СвязиСПользователями.ИДПользователя1СКоннект КАК ИДПользователя1СКоннект
		|ИЗ
		|	РегистрСведений.Коннект_СвязиСПользователями КАК Коннект_СвязиСПользователями
		|ГДЕ
		|	Коннект_СвязиСПользователями.ИДПользователя1СКоннект <> """"
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникКомпании";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	МассивДанные = Новый Массив();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураДанных = Новый Структура("СотрудникКомпании,ИДПользователя1СКоннект");
		ЗаполнитьЗначенияСвойств(СтруктураДанных, ВыборкаДетальныеЗаписи);
		МассивДанные.Добавить(СтруктураДанных);
	КонецЦикла;

	Возврат МассивДанные;

КонецФункции

&НаСервере
Функция ПолучитьУИДПользователя1СКоннект(СотрудникКомпании)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	Коннект_СвязиСПользователями.ИДПользователя1СКоннект КАК ИДПользователя1СКоннект
		|ИЗ
		|	РегистрСведений.Коннект_СвязиСПользователями КАК Коннект_СвязиСПользователями
		|ГДЕ
		|	Коннект_СвязиСПользователями.СотрудникКомпании = &СотрудникКомпании";

	Запрос.УстановитьПараметр("СотрудникКомпании", СотрудникКомпании);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.ИДПользователя1СКоннект;
	КонецЕсли;

	Возврат "";

КонецФункции

&НаСервере
Функция ЛинииПоддержкиСервер()

	Возврат Коннект_ПрограммныйИнтерфейс.ЛинииПоддержки();

КонецФункции

&НаСервере
Функция ЛинииПоддержкиСотрудникаСервер(ИДПолучателяПоддержки)

	Возврат Коннект_ПрограммныйИнтерфейс.ПодключенныеЛинииПоддержки(ИДПолучателяПоддержки).ВыгрузитьКолонку("ИДЛинииПоддержки");

КонецФункции

&НаКлиенте
Процедура Отправить(Команда)
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		ОтправитьФайл();
	КонецЕсли;
	Если ЗначениеЗаполнено(Сообщение) Тогда
		ОтправитьСообщение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьФайл()

	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите файл для отправки");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ПользовательКоннект) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите пользователя 1С-Коннект");
		Возврат;
	КонецЕсли;

	//ПараметрыФайла = ПолучитьПараметрыФайлаДляОтправки(ИмяФайла);
	
	ДлительнаяОперация = ОтправитьФайлНаСервере(ИмяФайла, АдресФайлаВоВременномХранилище, ПользовательКоннект, ЛинияПоддержкиПользователяКоннект, ПолучитьИмяОтправителя(ПользовательКоннект), АдресХранилища);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = "Отправка файла в облако 1С-Коннект";
		ПараметрыОжидания.Интервал = 0;
		Обработчик = Новый ОписаниеОповещения("ОтправитьФайлЗавершение", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение()

	Если НЕ ЗначениеЗаполнено(Сообщение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Введите сообщение для отправки");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ПользовательКоннект) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите пользователя 1С-Коннект");
		Возврат;
	КонецЕсли;

	ОтправитьСообщениеНаСервере();

КонецПроцедуры

&НаСервере
Функция ОтправитьФайлНаСервере(ИмяФайла, АдресФайлаВоВременномХранилище, ИДПолучателяПоддержки, ИДЛинииПоддержки, ИмяОтправителя, АдресХранилища)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяФайла", ИмяФайла);
	ПараметрыЗадания.Вставить("АдресФайлаВоВременномХранилище", АдресФайлаВоВременномХранилище);
	ПараметрыЗадания.Вставить("ИДПолучателяПоддержки", ИДПолучателяПоддержки);
	ПараметрыЗадания.Вставить("ИДЛинииПоддержки", ИДЛинииПоддержки);
	ПараметрыЗадания.Вставить("ИмяОтправителя", ИмяОтправителя);
	ПараметрыЗадания.Вставить("АдресХранилища", АдресХранилища);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ПараметрыВыполнения.ЗапуститьВФоне = Ложь;
	ПараметрыВыполнения.ЗапуститьНеВФоне = Истина;
	
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Отправка файла через облако 1С-Коннект'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
	"Коннект_ПрограммныйИнтерфейс.ПодготовитьДанныеДляОтправкиФайла",
	ПараметрыЗадания, ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Функция ПолучитьИмяОтправителя(ПользовательКоннект)

	ИмяОтправителя = "";

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	Коннект_СвязиСПользователями.СотрудникКомпании КАК СотрудникКомпании
		|ИЗ
		|	РегистрСведений.Коннект_СвязиСПользователями КАК Коннект_СвязиСПользователями
		|ГДЕ
		|	Коннект_СвязиСПользователями.ИДПользователя1СКоннект = &ИДПользователя1СКоннект";

	Запрос.УстановитьПараметр("ИДПользователя1СКоннект", ПользовательКоннект);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ИмяОтправителя = ВыборкаДетальныеЗаписи.СотрудникКомпании;
	КонецЕсли;

	Возврат ИмяОтправителя;

КонецФункции

&НаСервере
Процедура ОтправитьСообщениеНаСервере()

	ТаблицаПолучателей = Новый ТаблицаЗначений;
	ТаблицаПолучателей.Колонки.Добавить("ИДПолучателяПоддержки");
	ТаблицаПолучателей.Колонки.Добавить("ИДЛинииПоддержки");

	НоваяСтрока = ТаблицаПолучателей.Добавить();
	НоваяСтрока.ИДПолучателяПоддержки = ПользовательКоннект; //Пользователь или специалист которому предназначено сообщение
	НоваяСтрока.ИДЛинииПоддержки = ЛинияПоддержкиПользователяКоннект; //Линия поддержки, в чат по которой будет доставлено сообщение
	
	Если Значениезаполнено(Тема) Тогда
		Наименование = Тема;
	Иначе
		Наименование = "Данные из информационной базы " + Строка(Метаданные.КраткаяИнформация);
	КонецЕсли;

	ResultData = Коннект_ПрограммныйИнтерфейс.ОтправитьУведомление(Наименование, Наименование, Сообщение, ТаблицаПолучателей);

	Если ТипЗнч(ResultData) = Тип("ТаблицаЗначений") Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сообщение отправлено успешно");

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОкончанияПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресФайлаВоВременномХранилище = Адрес;
	УстановитьДоступностьКнопкиОтправить(Истина);
	ПутьКФайлу = ВыбранноеИмяФайла;
	СоставФайла = Новый Файл(ВыбранноеИмяФайла);
	ИмяФайла = СоставФайла.Имя;
	Элементы.ПутьКФайлу.ПодсказкаВвода = "Выберите файл";
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьФайлЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Ошибки = Неопределено;
				
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ОписаниеОшибки = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		
		Если Не ПустаяСтрока(ОписаниеОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ,ОписаниеОшибки, , , , );
		КонецЕсли;
			
		Если Ошибки <> Неопределено И Ошибки.СписокОшибок.Количество() > 0 Тогда
			ПоказатьОповещениеПользователя(НСтр("ru = 'При отправке файла произошли ошибки.'"));
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отправка файла произведена");
		КонецЕсли;
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ВызватьИсключение ДлительнаяОперация.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопкиОтправить(РезультатПроверкиПоляФайла = Неопределено, РезультатПроверкиПоляСообщения = Неопределено)
	
	Если РезультатПроверкиПоляФайла = Неопределено Тогда
		ФайлВыбран = ЗначениеЗаполнено(ПутьКФайлу);
	Иначе
		ФайлВыбран = РезультатПроверкиПоляФайла;
	КонецЕсли;
	Если РезультатПроверкиПоляСообщения = Неопределено Тогда
		ТекстСообщенияЗаполнен = ЗначениеЗаполнено(Сообщение);
	Иначе
		ТекстСообщенияЗаполнен = РезультатПроверкиПоляСообщения;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПользовательКоннект) И ЗначениеЗаполнено(ЛинияПоддержкиПользователяКоннект) И 
			(ФайлВыбран Или ТекстСообщенияЗаполнен) Тогда
		Элементы.Отправить.Доступность = Истина;
	Иначе
		Элементы.Отправить.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Отправить.Доступность = Ложь;
	ПолеПутьКФайлуЗаполнено = Ложь;
	ПолеТекстСообщенияЗаполнено = Ложь;
	АдресФайлаВоВременномХранилище = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если Текст = ПутьКФайлу Тогда
		УстановитьДоступностьКнопкиОтправить(Истина);
	Иначе
		УстановитьДоступностьКнопкиОтправить(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		Если Не ПолеТекстСообщенияЗаполнено Тогда
			УстановитьДоступностьКнопкиОтправить(, Истина);
		КонецЕсли;
		ПолеТекстСообщенияЗаполнено = Истина;
	Иначе
		УстановитьДоступностьКнопкиОтправить(, Ложь);
		ПолеТекстСообщенияЗаполнено = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		ПользовательКоннектПредставление = Параметры.Сотрудник;
		ПользовательКоннект = ПолучитьУИДПользователя1СКоннект(ПользовательКоннектПредставление);
	КонецЕсли;
	
	ТЗЛинийПоддержки1СКоннект.Загрузить(Коннект_ПрограммныйИнтерфейс.ЛинииПоддержки());
	
КонецПроцедуры

