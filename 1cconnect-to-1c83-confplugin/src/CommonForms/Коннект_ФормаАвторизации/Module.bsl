#Область ОбработчикиСобытийФормы

// Описание
// 
// Параметры:
// 	Отказ - Булево - Описание
// 	СтандартнаяОбработка - Булево - Описание
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьПривилегированныйРежим(Истина);
	ДанныеАутентификации = Коннект_ОбщегоНазначения.ПолучитьДанныеАутентификации();
	Если ДанныеАутентификации <> Неопределено Тогда
		Логин = ДанныеАутентификации.Логин;
	КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

// Описание
// 
// Параметры:
// 	Команда - КомандаФормы - Описание
&НаКлиенте
Процедура КомандаОК(Команда)

	Если Не ЗаполнениеЛогинаИПароляКорректно() Тогда
		Возврат;
	КонецЕсли;

	ОписаниеОшибки = ПроверитьПодключениеК1СКоннектСервер(Логин, Пароль);

	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);

	Иначе

		ЗапомнитьПароль = Истина;

		СохранитьДанныеАутентификации(?(ЗапомнитьПароль, Новый Структура("Логин, Пароль", Логин, Пароль), Неопределено));

		Закрыть(Неопределено);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьПодключениеК1СКоннектСервер(Логин, Пароль)

	Возврат Коннект_ПрограммныйИнтерфейс.ПроверитьПодключениеК1СКоннект(Логин, Пароль)[0].Результат;

КонецФункции 

// Описание
// 
// Параметры:
// 	Команда - КомандаФормы - Описание
&НаКлиенте
Процедура КомандаОтмена(Команда)

	Закрыть("КомандаОтмена");

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Описание
// 
// Параметры:
// Возвращаемое значение:
// 	Булево - Описание
&НаКлиенте
Функция ЗаполнениеЛогинаИПароляКорректно()

	Если ПустаяСтрока(Логин) Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Логин"" не заполнено.'"), , "Логин");
		Возврат Ложь;

	ИначеЕсли ПустаяСтрока(Пароль) Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Пароль"" не заполнено.'"), , "Пароль");
		Возврат Ложь;

	КонецЕсли;

	Возврат Истина;

КонецФункции

// Описание
// 
// Параметры:
// 	ДанныеАутентификации - Неопределено, Структура - Описание:
// * Логин - Строка -
// * Пароль - Строка -
&НаСервереБезКонтекста
Процедура СохранитьДанныеАутентификации(Знач ДанныеАутентификации)

	// Проверка права записи данных
	Если Не Коннект_ОбщегоНазначения.ПравоЗаписиПараметровКоннект() Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав для записи данных аутентификации 1С-Коннект.'");
	КонецЕсли;

	// Запись данных
	УстановитьПривилегированныйРежим(Истина);
	Коннект_ОбщегоНазначения.СохранитьДанныеАутентификации(ДанныеАутентификации);

КонецПроцедуры
#КонецОбласти
