// Описание
// 
// Параметры:
// 	ПолныйАдресРесурса
// Возвращаемое значение:
// 	Неопределено, HTTPОтвет - Описание
Функция ВыполнитьHTTPЗапросОбновленияРасширения(ПолныйАдресРесурса) Экспорт

	СтруктураURI = Коннект_ОбщегоНазначения.СтруктураURI(ПолныйАдресРесурса);
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт);

	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);

	Попытка

		Результат = HTTPСоединение.Получить(HTTPЗапрос);

		Возврат Результат;

	Исключение

		Возврат Неопределено;

	КонецПопытки;

КонецФункции

// Подготоваливает данные для обновления расширения, скачивает файл с сервера 1С-Коннект
// 
// Параметры:
// 	СкачатьФайлОбновления - Булево - Описание
// Возвращаемое значение:
// 	Неопределено, Структура, Структура, HTTPОтвет - Описание:
// * ВерсияФайлаОбновления 
// * Данные 
// * Файл 
// * ОписаниеОшибки 
Функция ПолучитьФайлОбновления(СкачатьФайлОбновления) Экспорт

	URL = ПолучитьСсылкуReleaseDescription();

	Результат = Коннект_Автообновление.ВыполнитьHTTPЗапросОбновленияРасширения(URL);

	Если Результат = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	СтрокаJSON = Результат.ПолучитьТелоКакСтроку();

	Если НЕ СтрокаJSON = Неопределено Тогда

		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
		РезультатJSON = ПрочитатьJSON(ЧтениеJSON, Истина);

		ТекущаяВерсияVersion = РезультатJSON.Получить("Version");

		ТекущаяВерсияРасширения = "";

		МассивРасширений = РасширенияКонфигурации.Получить(Новый Структура("Имя", "BotPlatform"));

		Если МассивРасширений.Количество() > 0 Тогда

			ТекущаяВерсияРасширения = МассивРасширений[0].Версия;

		КонецЕсли;

		Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ТекущаяВерсияРасширения, ТекущаяВерсияVersion) < 0 Тогда

			ЭлементFiles = РезультатJSON.Получить("Files");

			Если ТипЗнч(ЭлементFiles) = Тип("Массив") Тогда

				СтруктураРезультата = ПустаяСтруктураФайлаОбновления();

				СтруктураРезультата.ВерсияФайлаОбновления = ТекущаяВерсияVersion;
				СтруктураРезультата.Данные = ЭлементFiles[0];

				Если СкачатьФайлОбновления Тогда

					СтруктураРезультата.Файл = Коннект_Автообновление.ВыполнитьHTTPЗапросОбновленияРасширения(ЭлементFiles[0].Получить("PrimaryDownloadLink"));

				Иначе

					СтруктураРезультата.Файл = Результат;

				КонецЕсли;

				Возврат СтруктураРезультата;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Возврат Результат;

КонецФункции

// Получает ссылку где хранятся обновления расширения 
// 
Функция ПолучитьСсылкуReleaseDescription() Экспорт

	Возврат "https://distribs.1c-connect.com/1c/1cbot/ReleaseDescription.json";

КонецФункции

// Подготавливает пустую структуру
// 
// Параметры:
// Возвращаемое значение:
// 	Структура - Описание:
// * ВерсияФайлаОбновления 
// * Данные 
// * Файл 
// * ОписаниеОшибки 
//
Функция ПустаяСтруктураФайлаОбновления() Экспорт

	ПустаяСтруктураОтвета = Новый Структура;
	ПустаяСтруктураОтвета.Вставить("ВерсияФайлаОбновления");
	ПустаяСтруктураОтвета.Вставить("Данные");
	ПустаяСтруктураОтвета.Вставить("Файл");
	ПустаяСтруктураОтвета.Вставить("ОписаниеОшибки");

	Возврат ПустаяСтруктураОтвета;

КонецФункции

Процедура ВыполнитьАвтообновлениеРасширенияАвтоматически() Экспорт

	Результат = ПолучитьФайлОбновления(Истина);

	Если Результат <> Неопределено Тогда

		ТелоФайла = Результат.Файл.ПолучитьТелоКакДвоичныеДанные();

		MD5Файла = Коннект_ОбщегоНазначения.ПолучитьСуммуMD5Файла(ТелоФайла, Истина);

		Если Результат.Данные.Получить("MD5") = MD5Файла Тогда

			АдресХранилища = ПоместитьВоВременноеХранилище(Результат.Файл.ПолучитьТелоКакДвоичныеДанные());

			УстановленнаяВерсия = ОбновитьРасширение(АдресХранилища);
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Выполняет обновление расширения 1С-Коннект, база должна быть в монопольно режиме
//
// Параметры:
//  АдресХранилища - адрес во временном хранилище с расширением
//
Функция ОбновитьРасширение(АдресХранилища) Экспорт 
	
	МассивРасширений = РасширенияКонфигурации.Получить(Новый Структура("Имя", "BotPlatform"));
	
	Если МассивРасширений.Количество() = 0 Тогда
		ТекущеееРасширение = РасширенияКонфигурации.Создать();
	Иначе
		ТекущеееРасширение = МассивРасширений[0];
	КонецЕсли;
	                 
	Попытка
		ТекущеееРасширение.Записать(ПолучитьИзВременногоХранилища(АдресХранилища));
		УстановленнаяВерсия = ТекущеееРасширение.Версия;
	Исключение
		УстановленнаяВерсия = "";
	КонецПопытки;
	
	Возврат УстановленнаяВерсия;
	
КонецФункции 

